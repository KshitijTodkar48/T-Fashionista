generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UserAccount {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User     @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model AdminAccount {
  id                 String    @id @default(cuid())
  adminId            String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  admin              Admin      @relation(fields: [adminId], references: [id])

  @@unique([providerId, providerAccountId])
}

model UserSession {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model AdminSession {
  id           String   @id @default(cuid())
  adminId      String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  admin        Admin    @relation(fields: [adminId], references: [id])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  hashedPassword String
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      UserAccount[]
  sessions      UserSession[]
  cartItems     Product[] @relation("CartItems")
  orderedItems  Product[] @relation("OrderedItems")
}

model Admin {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  hashedPassword String
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      AdminAccount[]
  sessions      AdminSession[]
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model Product {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(255)
  price     String   @db.VarChar(255)
  rating    String   @default("No rating")
  imageURL  String   @db.VarChar(255)
  published Boolean  @default(false)
  addedBy     User[]   @relation("CartItems")
  orderedBy   User[]   @relation("OrderedItems")
}
